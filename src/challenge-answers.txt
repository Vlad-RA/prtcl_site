
Login Stage (Stage 0):
Username: admin
Password: Sup3rS3cr3tP@$$

Steps to solve:
1. Open the browser's developer tools (e.g., right-click on the page and select "Inspect" or press F12).
2. Examine the HTML source code of the login page (usually /).
3. Look for HTML comments, which look like <!-- This is a comment -->.
4. The username 'admin' and the password 'Sup3rS3cr3tP@$$' can be found inside one of these comments.
5. Upon successful login, a flag will be displayed in a notification. The content of the flag (e.g., flag{W3lc0me_to_th3_Syst3m}) is configured in the application's environment.

Secret Data Stage (Stage 1 - /challenge1):
Access Key: OpenSesame123

Steps to solve:
1. After successfully logging in, you will land on a page (e.g., /challenge1) asking for an "access key".
2. Open the browser's developer tools and inspect the JavaScript code associated with this page. Look for the component that handles input submission (likely ChallengeDetails.tsx).
3. You will find an explicit comparison being made within the JavaScript logic, for example: `if (userInput.trim().toLowerCase() === "OpenSesame123".toLowerCase())`.
4. This reveals the required access key: 'OpenSesame123'.
5. Upon submitting the correct access key, a flag will be displayed. The content of the flag (e.g., flag{S3cr3t_Data_Unl0ck3d}) is configured in the application's environment.

Network Traffic Analysis (Stage 2 - /challenge2):
Answer: ProtocolX25

Steps to solve:
1. Navigate to the challenge page (e.g., /challenge2).
2. Open the browser's developer tools and inspect the JavaScript code, particularly looking at how the challenge configuration is loaded or defined (likely in src/config/challenges.ts or bundled with the page's JavaScript).
3. Find the configuration array for challenges. Look for the entry corresponding to this stage (id: 'network_traffic_analysis').
4. The 'answer' field in this configuration object will contain "ProtocolX25".
5. Upon submitting the correct answer, a flag will be displayed. The content of the flag is configured in the application's environment.

Log File Investigation (Stage 3 - /challenge3):
Answer: ErrorID7749

Steps to solve:
1. Navigate to the challenge page (e.g., /challenge3).
2. Open the browser's developer tools and inspect the JavaScript code, particularly looking at how the challenge configuration is loaded or defined.
3. Find the configuration array for challenges. Look for the entry corresponding to this stage (id: 'log_file_investigation').
4. The 'answer' field in this configuration object will contain "ErrorID7749".
5. Upon submitting the correct answer, a flag will be displayed. The content of the flag is configured in the application's environment.

Server Config Audit (Stage 4 - /challenge4):
Answer: BackupDisabled

Steps to solve:
1. Navigate to the challenge page (e.g., /challenge4).
2. Open the browser's developer tools and inspect the JavaScript code, particularly looking at how the challenge configuration is loaded or defined.
3. Find the configuration array for challenges. Look for the entry corresponding to this stage (id: 'server_config_audit').
4. The 'answer' field in this configuration object will contain "BackupDisabled".
5. Upon submitting the correct answer, a flag will be displayed. The content of the flag is configured in the application's environment.

Final System Key (Stage 5 - /challenge5):
Answer: SystemOverrideAlpha

Steps to solve:
1. Navigate to the challenge page (e.g., /challenge5).
2. Open the browser's developer tools and inspect the JavaScript code, particularly looking at how the challenge configuration is loaded or defined.
3. Find the configuration array for challenges. Look for the entry corresponding to this stage (id: 'final_system_key').
4. The 'answer' field in this configuration object will contain "SystemOverrideAlpha".
5. Upon submitting the correct answer, a flag will be displayed. The content of the flag is configured in the application's environment.
